// This file is automatically generated from README.md
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        // Customized mod_tap and layer_tap:
        // - mod_tap is 'tap preferred' as it's used on home-row
        // - layer_tap uses balanced flavor
        mt_: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        lt_: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

            default_layer {
                    bindings = <
&trans &kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp LS(N8) &trans
&trans &lt_ 3 A &mt_ LSHFT R &mt_ LALT S &mt_ LGUI T &mt_ LCTRL D &mt_ LCTRL H &mt_ LGUI N &mt_ LALT E &mt_ LSHFT I &lt_ 3 O &trans
&trans &lt_ 4 Z &kp X &kp C &kp V &kp B &kp K &kp M &kp COMMA &kp DOT &lt_ 4 SQT &trans
&lt_ 5 ESC &kp LSHFT &lt_ 2 TAB &kp RET &lt_ 1 SPC &lt_ 3 BKSP
                    >;
            };

            lower_layer {
                    bindings = <
&trans &trans &kp N7 &kp N8 &kp N9 &trans &kp HOME &kp LA(LEFT) &kp UP &kp LA(RIGHT) &kp END &trans
&trans &mo 3 &mt_ LSHFT N4 &mt_ LALT N5 &mt_ LGUI N6 &kp LCTRL &mt_ LCTRL LG(LBKT) &mt_ LGUI LEFT &mt_ LALT DOWN &mt_ LSHFT RIGHT &lt_ 3 LG(RBKT) &trans
&trans &kp N0 &kp N1 &kp N2 &kp N3 &trans &kp LG(LS(LBKT)) &kp LA(LS(LC(LG(LBKT)))) &kp LA(LS(LC(LG(BSLH)))) &kp LA(LS(LC(LG(RBKT)))) &kp LG(LS(RBKT)) &trans
&trans &trans &trans &trans &trans &trans
                    >;
            };

            raise_layer {
                    bindings = <
&trans &kp LS(GRAVE) &kp LS(N6) &kp LS(N2) &kp LS(N4) &kp LS(N5) &kp LS(N7) &kp FSLH &kp BSLH &kp LS(BSLH) &kp GRAVE &trans
&trans &lt_ 3 LA(U) &mt_ LSHFT LS(COMMA) &mt_ LALT LBKT &mt_ LGUI LS(N9) &mt_ LCTRL LS(LBKT) &mt_ LCTRL KP_MINUS &mt_ LGUI LS(MINUS) &mt_ LALT LS(SEMI) &mt_ LSHFT SEMI &lt_ 3 LS(N3) &trans
&trans &trans &kp LS(DOT) &kp RBKT &kp LS(N0) &kp LS(RBKT) &kp LS(EQUAL) &kp EQUAL &kp LS(FSLH) &kp LS(N1) &kp LS(SQT) &trans
&trans &trans &trans &trans &trans &kp LA(BKSP)
                    >;
            };

            hyper_layer {
                    bindings = <
&trans &kp LA(LS(LC(LG(Q)))) &kp LA(LS(LC(LG(W)))) &kp LA(LS(LC(LG(F)))) &kp LA(LS(LC(LG(P)))) &kp LA(LS(LC(LG(G)))) &kp LA(LS(LC(LG(N1)))) &kp LA(LS(LC(LG(N2)))) &kp LA(LS(LC(LG(N3)))) &kp LA(LS(LC(LG(N4)))) &kp LA(LS(LC(LG(N5)))) &trans
&trans &kp LA(LS(LC(LG(A)))) &kp LA(LS(LC(LG(R)))) &kp LA(LS(LC(LG(S)))) &kp LA(LS(LC(LG(T)))) &kp LA(LS(LC(LG(D)))) &trans &kp LA(LS(LC(LG(LEFT)))) &kp LA(LS(LC(LG(UP)))) &kp LA(LS(LC(LG(RIGHT)))) &trans &trans
&trans &kp LA(LS(LC(LG(Z)))) &kp LA(LS(LC(LG(X)))) &kp LA(LS(LC(LG(C)))) &kp LA(LS(LC(LG(V)))) &kp LA(LS(LC(LG(B)))) &trans &kp LA(LS(LC(LG(SEMI)))) &kp LA(LS(LC(LG(DOWN)))) &kp LA(LS(LC(LG(SQT)))) &trans &trans
&kp LA(LS(LC(LG(ESC)))) &trans &kp LA(LS(LC(LG(TAB)))) &kp LA(LS(LC(LG(RET)))) &kp LA(LS(LC(LG(SPC)))) &kp LA(LS(LC(LG(BKSP))))
                    >;
            };

            adjust_layer {
                    bindings = <
&trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans &trans &trans &trans &trans &trans &trans
&trans &bt BT_CLR &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans
                    >;
            };

            mouse_layer {
                    bindings = <
&trans &kp LG(Q) &kp LG(W) &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &kp LG(S) &kp LG(T) &trans &trans &trans &trans &trans &trans &trans
&trans &kp LG(Z) &kp LG(X) &kp LG(C) &kp LG(V) &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans
                    >;
            };
        };
};

